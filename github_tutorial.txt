먼저 표기법부터 통일합시다.
코드, 파일명 등을 표기할 때는 표기법이 있습니다.
주로 Camel, Pascal, Hungarian, Snake, Kebab이 있습니다.

저는 Snake 표기법을 권장드립니다.
주로 오픈소스의 경우 Snake 표기법을 많이 쓰기 때문입니다.

Snake표기법은 간단합니다.
모든 단어는 '소문자로 작성하고', 단어마다 Underdash('_')로 구분합니다.
단어의 품사는 명사(noun)로만 구성하는것이 원칙입니다.
하지만 Method, Function 명을 작성할때는 제일앞에 동사(verb)가 와야합니다.

예1) ios_developer_list = ['jgkim', 'ygkim']
예2)
class meal:
  def eat(self):
    return True
  def eat_breakfast(self):
    return self.eat()
  def eat_lunch(self):
    return self.eat()

------------------------------------------------------------------------------
깃허브를 시작하는 방법은 다음과 같습니다.

- 먼저 깃허브 계정을 만들고, Username과 계정을 확실히 인지합시다.
- atom을 구글에 검색하여 atom editor를 운영체제에 맞게 설치합시다.
- git-bash를 구글에서 검색해서 운영체제에 맞게 다운로드합니다.
- git-bash 설치과정에서 Default editor를 atom으로 설정합니다.
- git-bash 설치가 끝나면 atom을 실행합니다.
- 좌측 상단의 file-open folder..를 통해 당신의 프로젝트를 저장할(넉넉한 용량의) 폴더를 엽니다.
- ctrl+shift+p를 누르면 작은 터미널 비슷한게 팝업으로 출력되는데 install package 입력하여 들어갑시다
- atom-beautify (제작자 : glavin001), highlight-selected (제작자 : richrace),
  minimap (제작자 : atom-minimap), minimap-highlight-selected (제작자 : atom-minimap)
  platformio-ide-terminal (제작자 : platformio), remote-ftp (제작자 : icetee)를 설치합니다.

- 모든 패키지가 설치되면 ctrl + ~ 를 눌러 atom terminal을 띄웁니다.
- 다음과 같이 입력합니다.
git init
git config --global user.name "당신의 깃허브 계정 username"
git config --global user.email "당신의 깃허브 계정 이메일"
git remote add origin https://github.com/modec28/jgkim_portfolio.git
git remote update
git branch -a
이렇게 하나씩 입력하면 git branch -a 를 입력했을때 빨간 글씨로 remotes/origin/master만 떠야함.
git checkout -t origin/master
이렇게 하면 갑자기 옆의 Project explorer에 폴더와 파일이 주루룩 나타날것임.
이제 atom 우측 하단의 git을 누르고 init을 하면 오른쪽에 깃허브 창이 나타남.

master branch에 바로 push하는것은 내가 막아놓았기에, 업로드를 위해서는 Pull request를 해야함.
먼저 branch를 새로 생성한뒤에 publish를 하고, 파일을 업로드한뒤에 push함.
그 후 깃허브 웹사이트에 들어와서 pull request를 실행하고 merge신청.
내가 merge받아주면 master branch로 바꾼뒤에 fetch-pull 실행하여 업데이트
이를 반복하면됩니다.
